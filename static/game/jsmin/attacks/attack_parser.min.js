class AttackParser{static parse(t){for(let e=0;e<t.attacks.length;++e){const a=t.attacks[e];a.nextTime=a.attackDelay,delete a.attackDelay;for(let e=0;e<a.arrows.length;++e){const r=a.arrows[e];switch(0!==e&&(r.delay+=a.arrows[e-1].targetTime),r.targetTime=r.delay,delete r.delay,r.direction){case"D":r.direction="0";break;case"L":r.direction="1";break;case"U":r.direction="2";break;case"R":r.direction="3"}}}return t.attacks}}