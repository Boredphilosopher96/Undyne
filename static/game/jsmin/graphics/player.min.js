class Player extends GraphicsObject{static#shieldDistance=32;static#heartDistance=8;static#shieldRadiansPerSec=25;static#heartRedColor=16711680;static#heartGreenColor=65280;static#maxHp=4;static#shieldHitDuration=250;static#damageShiftDuration=100;#hp;#invincibilityTimeRemaining;#maxInvincibilityTime;#shieldDir;#originalRotation;#targetRotation;#rotationDirection;#shieldHitTimeRemaining;#updateShieldVisibility;#damageShift;#damageShiftTimeRemaining;#heartSprite;#shieldSprite;#shieldHitSprite;#circle;constructor(i){switch(super(),this.#hp=Player.#maxHp,this.#damageShift=0,this.#invincibilityTimeRemaining=0,this.#damageShiftTimeRemaining=0,i){case"easy":this.#maxInvincibilityTime=1e3;break;case"medium":this.#maxInvincibilityTime=500;break;case"hard":this.#maxInvincibilityTime=100}var i=.5*Main.runner.gameWidth,t=.5*Main.runner.gameHeight;this.#shieldDir=2,this.#originalRotation=Player.#getRotationFromDirection(this.#shieldDir),this.#targetRotation=this.#originalRotation,this.#rotationDirection=0,this.#shieldHitTimeRemaining=0,this.#updateShieldVisibility=!0,this.#heartSprite=new PIXI.Sprite(Main.runner.assetManager.getTexture("heart")),this.#heartSprite.anchor.set(.5,.5),this.#heartSprite.position.set(i,t),this.#heartSprite.tint=Player.#heartRedColor,this.#shieldSprite=new PIXI.Sprite(Main.runner.assetManager.getTexture("shield")),this.#shieldSprite.anchor.set(.5,1.4),this.#shieldSprite.position.set(i,t),this.#shieldSprite.rotation=this.#originalRotation,this.#shieldSprite.visible=!1,this.#shieldHitSprite=new PIXI.Sprite(Main.runner.assetManager.getTexture("shieldHit")),this.#shieldHitSprite.anchor.set(.5,1.4),this.#shieldHitSprite.position.set(i,t),this.#shieldHitSprite.rotation=this.#shieldSprite.rotation,this.#shieldHitSprite.visible=!1,this.#circle=new PIXI.Graphics,this.#circle.lineStyle(1,65280,1),this.#circle.drawCircle(320,240,24),this.#circle.visible=!1,Main.runner.gameplayStage.addChild(this.#heartSprite),Main.runner.gameplayStage.addChild(this.#shieldSprite),Main.runner.gameplayStage.addChild(this.#shieldHitSprite),Main.runner.gameplayStage.addChild(this.#circle)}static get shieldDistance(){return this.#shieldDistance}static get heartDistance(){return this.#heartDistance}static#getRotationFromDirection(i){return MathUtility.wrap(.5*Math.PI*(2+i),0,2*Math.PI)}get shieldDir(){return this.#shieldDir}set shieldDir(e){if(this.#originalRotation=this.#shieldSprite.rotation,this.#targetRotation=Player.#getRotationFromDirection(e),e!==this.#shieldDir||0!==this.#rotationDirection){this.#shieldDir=e;let i,t;t=this.#originalRotation<this.#targetRotation?(i=this.#targetRotation-this.#originalRotation,this.#originalRotation+2*Math.PI-this.#targetRotation):(i=this.#targetRotation+2*Math.PI-this.#originalRotation,this.#originalRotation-this.#targetRotation),this.#rotationDirection=i<=t+1e-6?1:-1}}hideShieldSprites(){this.#shieldSprite.visible=!1,this.#shieldHitSprite.visible=!1,this.#circle.visible=!1,this.#updateShieldVisibility=!1}showShieldSprites(){this.#shieldSprite.visible=!0,this.#circle.visible=!0,this.#updateShieldVisibility=!0}reset(){this.#hp=Player.#maxHp,this.#invincibilityTimeRemaining=0,this.#shieldDir=2,this.#originalRotation=Player.#getRotationFromDirection(this.#shieldDir),this.#targetRotation=this.#originalRotation,this.#rotationDirection=0,this.#shieldHitTimeRemaining=0,this.#updateShieldVisibility=!0,this.#damageShift=0,this.#damageShiftTimeRemaining=0,this.#shieldSprite.rotation=this.#originalRotation,this.#shieldHitSprite.rotation=this.#shieldSprite.rotation,this.#heartSprite.tint=Player.#heartRedColor,this.#heartSprite.visible=!0,this.#shieldSprite.visible=!1,this.#shieldHitSprite.visible=!1,this.#circle.visible=!1}takeDamage(){0<this.#invincibilityTimeRemaining||(this.#invincibilityTimeRemaining=this.#maxInvincibilityTime,this.#damageShiftTimeRemaining=Player.#damageShiftDuration,Main.runner.assetManager.getAudio("arrowDamageSfx").play(),this.#hp=Math.max(0,this.#hp-1))}hitShield(){this.#shieldHitTimeRemaining=Player.#shieldHitDuration}#targetDirectionReached(i){return this.#originalRotation<=this.#targetRotation&&1===this.#rotationDirection&&(this.#targetRotation<=i||i<=this.#originalRotation)||this.#originalRotation>=this.#targetRotation&&-1===this.#rotationDirection&&(this.#originalRotation<=i||i<=this.#targetRotation)||this.#originalRotation<=this.#targetRotation&&-1===this.#rotationDirection&&this.#originalRotation<=i&&i<=this.#targetRotation||this.#originalRotation>=this.#targetRotation&&1===this.#rotationDirection&&this.#targetRotation<=i&&i<=this.#originalRotation}update(i){this.#invincibilityTimeRemaining=Math.max(this.#invincibilityTimeRemaining-i,0),this.#damageShiftTimeRemaining=Math.max(this.#damageShiftTimeRemaining-i,0),this.#heartSprite.alpha=.5*Math.cos(2*Math.PI*this.#invincibilityTimeRemaining/250)+.5,this.#damageShift=2*Math.sin(2*Math.PI/8*this.#damageShiftTimeRemaining);let t=MathUtility.wrap(this.#shieldSprite.rotation+Player.#shieldRadiansPerSec*this.#rotationDirection*i/1e3,0,2*Math.PI);this.#targetDirectionReached(t)&&(t=this.#targetRotation,this.#rotationDirection=0),this.#shieldSprite.rotation=t,this.#shieldHitSprite.rotation=this.#shieldSprite.rotation,this.#updateShieldVisibility&&this.#heartSprite.tint!==Player.#heartRedColor&&(0<this.#shieldHitTimeRemaining?(this.#shieldSprite.visible=!1,this.#shieldHitSprite.visible=!0,this.#shieldHitTimeRemaining-=i):(this.#shieldSprite.visible=!0,this.#shieldHitSprite.visible=!1))}set heartColor(i){"green"===i?this.#heartSprite.tint=Player.#heartGreenColor:"red"===i&&(this.#heartSprite.tint=Player.#heartRedColor)}get heartColor(){return this.#heartSprite.tint===Player.#heartGreenColor?"green":"red"}get damageShift(){return this.#damageShift}get hp(){return this.#hp}static get maxHp(){return this.#maxHp}}
